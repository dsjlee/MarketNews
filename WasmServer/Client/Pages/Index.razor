@page "/"
@using WasmServer.Shared
@inject HttpClient http

@if (categories != null)
{
    <div class="row">
        <div class="col-md-6 col-lg-3">
            <select class="form-control" @bind="selectedCategory">
                <option value="@NewsCategory.All">@NewsCategory.All</option>
                @foreach (var category in categories)
                {
                    <option value="@category">@category</option>
                }
            </select>
        </div>
    </div>
}
<hr />
@if (articles == null || articles.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        @foreach (var article in articles.Where(x => (selectedCategory == NewsCategory.All) || x.Category == selectedCategory))
        {
            <div class="col-lg-4 col-md-6">
                <div class="card" style="margin-bottom: 10px">
                    <img src="@article.Image" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">@article.Headline</h5>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @article.Date.ToLongDateString()
                            &nbsp;&nbsp;
                            <span class="badge badge-primary">@article.Category</span>
                        </h6>
                        <p class="card-text">@article.Summary</p>
                        <div>Source: <a href="@article.Url" target="_blank">@article.Source</a></div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Article> articles = new List<Article>();
    private List<string> categories;
    private string selectedCategory = NewsCategory.All;

    protected override async Task OnInitializedAsync()
    {
        articles = await http.GetFromJsonAsync<List<Article>>("News") ?? new List<Article>();
        if (articles != null)
        {
            categories = articles.Select(x => x.Category).Distinct().OrderBy(x => x).ToList();
        }
    }
}
